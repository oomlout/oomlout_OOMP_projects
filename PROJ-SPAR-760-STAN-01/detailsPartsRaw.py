import OOMP
newPart = OOMP.getPartByID("PROJ-SPAR-760-STAN-01")

newPart.addTag('rawParts','C3,0.1uf,CAP0603-CAP,0603-CAP,Capacitor,,')
newPart.addTag('rawParts','C4,0.1uf,CAP0603-CAP,0603-CAP,Capacitor,,')
newPart.addTag('rawParts','C5,0.1uF,CAP0603-CAP,0603-CAP,Capacitor,,')
newPart.addTag('rawParts','C6,0.1uF,CAP0603-CAP,0603-CAP,Capacitor,,')
newPart.addTag('rawParts','C7,10uF,CAP_POL1206,EIA3216,Capacitor Polarized,,')
newPart.addTag('rawParts','C8,47uF,CAP_POL3528,EIA3528,Capacitor Polarized,,')
newPart.addTag('rawParts','C9,10uF,CAP_POL1206,EIA3216,Capacitor Polarized,,')
newPart.addTag('rawParts','C10,0.1uF,CAP0603-CAP,0603-CAP,Capacitor,,')
newPart.addTag('rawParts','FRAME1,FRAME-LEDGER,FRAME-LEDGER,CREATIVE_COMMONS,Schematic Frame,,')
newPart.addTag('rawParts','IC1,74LS595D,74LS595D,SO16,8-bit SHIFT REGISTER, output latch,,')
newPart.addTag('rawParts','IC2,74LS595D,74LS595D,SO16,8-bit SHIFT REGISTER, output latch,,')
newPart.addTag('rawParts','IC3,AVR-MEGA8-AI,AVR-MEGA8-AI,TQFP32-08,MICROCONTROLLER,,')
newPart.addTag('rawParts','IC4,74LS595D,74LS595D,SO16,8-bit SHIFT REGISTER, output latch,,')
newPart.addTag('rawParts','JP1,M16LOCK,M16LOCK,1X16_LOCK,1x16 .1 header,,')
newPart.addTag('rawParts','JP2,M16LOCK,M16LOCK,1X16_LOCK,1x16 .1 header,,')
newPart.addTag('rawParts','JP3,,M06SMD,1X06-SMD,Header 6,,')
newPart.addTag('rawParts','JP4,,M06LOCK,1X06_LOCK,Header 6,,')
newPart.addTag('rawParts','LOGO1,OSHW-LOGOL,OSHW-LOGOL,OSHW-LOGO-L,Open Source Hardware Logo This logo indicates the piece of hardware it is found on incorporates a OSHW license and/or adheres to the definition of open source hardware found here: http://freedomdefined.org/OSHW,,')
newPart.addTag('rawParts','R1,10k,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R2,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R3,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R4,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R5,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R6,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R7,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R8,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R9,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R10,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R11,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R12,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R13,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R14,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R15,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R16,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R17,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R18,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R19,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R20,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R21,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R22,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R23,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R24,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','R25,100,RESISTOR0603-RES,0603-RES,Resistor,,')
newPart.addTag('rawParts','U$1,FIDUCIAL1X2,FIDUCIAL1X2,FIDUCIAL-1X2,Fiducial Alignment Points,,')
newPart.addTag('rawParts','U$2,REVISION,REVISION,REVISION,,,')
newPart.addTag('rawParts','U$3,FIDUCIAL1X2,FIDUCIAL1X2,FIDUCIAL-1X2,Fiducial Alignment Points,,')
newPart.addTag('rawParts','U2,AVR_SPI_PRG_6PTH,AVR_SPI_PRG_6PTH,2X3,AVR ISP 6 Pin,,')
newPart.addTag('rawParts','U3,16 MHz,RESONATORSMD,RESONATOR-SMD,Resonator,,')
newPart.addTag('rawParts','ULN2803,,ULN2803SOICW,SO18L,Darlington Driver,,')